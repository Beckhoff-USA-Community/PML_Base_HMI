<div id="RecipeManagement" data-tchmi-type="TcHmi.Controls.System.TcHmiContent" data-tchmi-top="0" data-tchmi-left="0" data-tchmi-width="100" data-tchmi-height="100" data-tchmi-width-unit="%" data-tchmi-height-unit="%" data-tchmi-left-unit="%" data-tchmi-top-unit="%" data-tchmi-creator-viewport-width="400" data-tchmi-creator-viewport-height="480" data-tchmi-right-unit="px" data-tchmi-bottom-unit="px">

<div id="TcHmiTextblock_SelectRecipe" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="8" data-tchmi-height-unit="%" data-tchmi-left="2" data-tchmi-left-unit="%" data-tchmi-text="Selected recipe:" data-tchmi-top="13.5" data-tchmi-top-unit="%" data-tchmi-width="20" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-text-font-size="15" data-tchmi-text-font-weight="Bold" data-tchmi-text-vertical-alignment="Center" data-tchmi-text-horizontal-alignment="Right">


<script data-tchmi-target-attribute="data-tchmi-content-padding" type="application/json">
{
  "left": 0,
  "right": 10,
  "top": 0,
  "bottom": 0,
  "leftUnit": "px",
  "rightUnit": "%",
  "topUnit": "px",
  "bottomUnit": "px"
}
</script>
</div>

<div id="TcHmiTextblock_NewRecipeName" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="8" data-tchmi-height-unit="%" data-tchmi-left="2" data-tchmi-left-unit="%" data-tchmi-text="New recipe name:" data-tchmi-top="23.5" data-tchmi-top-unit="%" data-tchmi-width="20" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-text-font-size="15" data-tchmi-text-font-weight="Bold" data-tchmi-text-vertical-alignment="Center" data-tchmi-text-horizontal-alignment="Right">


<script data-tchmi-target-attribute="data-tchmi-content-padding" type="application/json">
{
  "left": 0,
  "right": 10,
  "top": 0,
  "bottom": 0,
  "leftUnit": "px",
  "rightUnit": "%",
  "topUnit": "px",
  "bottomUnit": "px"
}
</script>
</div>

<div id="TcHmiCombobox_RecipeList" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiCombobox" data-tchmi-height="8" data-tchmi-height-unit="%" data-tchmi-left="22" data-tchmi-left-unit="%" data-tchmi-top="13.5" data-tchmi-top-unit="%" data-tchmi-width="35" data-tchmi-width-unit="%" data-tchmi-combobox-text="Select recipe" data-tchmi-src-data="%f%ListRecipesAsReferenceArray(%s%TcHmiRecipeManagement.Config::recipeList%/s%,%ctrl%TcHmiTextbox_Filter::Text%/ctrl%)%/f%" data-tchmi-tooltip="Select a recipe from the list of recipes." data-tchmi-right-unit="px" data-tchmi-bottom-unit="px" data-tchmi-drop-down-style="Classic" data-tchmi-data-height="50">
<script data-tchmi-target-attribute="data-tchmi-content-padding" type="application/json">
{
  "top": 3,
  "right": 3,
  "bottom": 3,
  "left": 3
}
</script>

</div>

<div id="TcHmiTextbox_NewName" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextbox" data-tchmi-height="8" data-tchmi-height-unit="%" data-tchmi-left="22" data-tchmi-left-unit="%" data-tchmi-text="NewRecipe" data-tchmi-top="23.5" data-tchmi-top-unit="%" data-tchmi-width="35" data-tchmi-width-unit="%" data-tchmi-tooltip="Fill in a name, which should be used in case a new recipe is added.">
<script data-tchmi-target-attribute="data-tchmi-content-padding" type="application/json">
{
  "top": 3,
  "right": 3,
  "bottom": 3,
  "left": 3
}
</script>

</div>

<div id="TcHmiButton_Teach" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="8" data-tchmi-height-unit="%" data-tchmi-left="60.5" data-tchmi-left-unit="%" data-tchmi-text="Teach selected recipe" data-tchmi-top="15" data-tchmi-top-unit="%" data-tchmi-width="17" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-tooltip="The values of the selected recipe's members are updated with the current values from the target and the recipe itself is automatically saved afterwards.">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "TcHmiButton_Teach.onPressed",
    "actions": [
      {
        "objectType": "Function",
        "active": true,
        "fn": "TeachRecipe",
        "fnParams": [
          {
            "objectType": "Symbol",
            "symbolExpression": "%ctrl%TcHmiCombobox_RecipeList::SelectedValue%/ctrl%"
          }
        ],
        "asyncWait": true
      }
    ]
  }
]</script>

<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
{
  "topLeft": 5.0,
  "topRight": 5.0,
  "bottomLeft": 5.0,
  "bottomRight": 5.0,
  "topLeftUnit": "px",
  "topRightUnit": "px",
  "bottomLeftUnit": "px",
  "bottomRightUnit": "px"
}
</script>
</div>

<div id="TcHmiButton_TeachAsNew" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="8" data-tchmi-height-unit="%" data-tchmi-left="60.5" data-tchmi-left-unit="%" data-tchmi-text="Teach as new recipe" data-tchmi-top="25" data-tchmi-top-unit="%" data-tchmi-width="17" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-tooltip="The values of the selected recipe's members are updated with the current values from the target and then saved into a new recipe with the defined name.">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "TcHmiButton_TeachAsNew.onPressed",
    "actions": [
      {
        "objectType": "Function",
        "active": true,
        "fn": "TeachAsNewRecipe",
        "fnParams": [
          {
            "objectType": "Symbol",
            "symbolExpression": "%ctrl%TcHmiCombobox_RecipeList::SelectedValue%/ctrl%"
          },
          {
            "objectType": "Symbol",
            "symbolExpression": "%ctrl%TcHmiTextbox_NewName::Text%/ctrl%"
          },
          {
            "objectType": "StaticValue",
            "valueType": "tchmi:general#/definitions/String",
            "value": ""
          }
        ],
        "asyncWait": true
      }
    ]
  }
]</script>

<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
{
  "topLeft": 5.0,
  "topRight": 5.0,
  "bottomLeft": 5.0,
  "bottomRight": 5.0,
  "topLeftUnit": "px",
  "topRightUnit": "px",
  "bottomLeftUnit": "px",
  "bottomRightUnit": "px"
}
</script>
</div>

<div id="TcHmiButton_Activate" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="8" data-tchmi-height-unit="%" data-tchmi-left="60.5" data-tchmi-left-unit="%" data-tchmi-text="Activate selected recipe" data-tchmi-top="5" data-tchmi-top-unit="%" data-tchmi-width="17" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-tooltip="The values of the selected recipe's members are written to the target.">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "TcHmiButton_Activate.onPressed",
    "actions": [
      {
        "objectType": "Function",
        "active": true,
        "fn": "ActivateRecipe",
        "fnParams": [
          {
            "objectType": "Symbol",
            "symbolExpression": "%ctrl%TcHmiCombobox_RecipeList::SelectedValue%/ctrl%"
          }
        ],
        "asyncWait": true
      }
    ]
  }
]</script>

<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
{
  "topLeft": 5.0,
  "topRight": 5.0,
  "bottomLeft": 5.0,
  "bottomRight": 5.0,
  "topLeftUnit": "px",
  "topRightUnit": "px",
  "bottomLeftUnit": "px",
  "bottomRightUnit": "px"
}
</script>
</div>

<div id="TcHmiButton_Delete" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="8" data-tchmi-height-unit="%" data-tchmi-left="60.5" data-tchmi-left-unit="%" data-tchmi-text="Delete selected recipe" data-tchmi-top="35" data-tchmi-top-unit="%" data-tchmi-width="17" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-tooltip="The selected recipe is deleted in case there is more than one recipe available in the list.">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "TcHmiButton_Delete.onPressed",
    "actions": [
      {
        "objectType": "Comment",
        "comment": "The condition is added to check, whether there is more than one recipe available. Only in this case the selected recipe can be deleted. Otherwise,\r\nif the last recipe is deleted, it would not be possible to create new recipes within the client anymore."
      },
      {
        "objectType": "Condition",
        "active": true,
        "asyncWait": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "FunctionExpression",
                  "functionExpression": "%ctrl%TcHmiCombobox_RecipeList::SrcData%/ctrl%.length"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/String",
                  "value": "1"
                },
                "compareOperator": ">",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "Comment",
                "comment": "The setting 'Wait for completion' (right click on the function) is deactivated for the DeleteRecipe function,\r\nbecause the attribute 'SelectedIndex' of the TcHmiCombobox_RecipeList has to be reset via the\r\nWriteToSymbol function, before the execution of the DeleteRecipe function has been finished. Otherwise\r\nthe TcHmiDatagrid_RecipeView would request the members of the already deleted recipe."
              },
              {
                "objectType": "Function",
                "active": true,
                "fn": "DeleteRecipe",
                "fnParams": [
                  {
                    "objectType": "Symbol",
                    "symbolExpression": "%ctrl%TcHmiCombobox_RecipeList::SelectedValue%/ctrl%"
                  }
                ],
                "asyncWait": false
              },
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiCombobox_RecipeList::SelectedIndex%/ctrl%",
                "valueType": "tchmi:general#/definitions/UDINT",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/UDINT",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ]
      }
    ]
  }
]</script>

<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
{
  "topLeft": 5.0,
  "topRight": 5.0,
  "bottomLeft": 5.0,
  "bottomRight": 5.0,
  "topLeftUnit": "px",
  "topRightUnit": "px",
  "bottomLeftUnit": "px",
  "bottomRightUnit": "px"
}
</script>
</div>

<div id="TcHmiButton_Update" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="8" data-tchmi-height-unit="%" data-tchmi-left="22.5" data-tchmi-left-unit="%" data-tchmi-text="Update selected recipe" data-tchmi-top="35" data-tchmi-top-unit="%" data-tchmi-width="17" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-tooltip="The values of the selected recipe's members are updated with the values of the third column of the datagrid.">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "TcHmiButton_Update.onPressed",
    "actions": [
      {
        "objectType": "Function",
        "active": true,
        "fn": "ConvertDatagridToRecipe",
        "fnParams": [
          {
            "objectType": "Symbol",
            "valueType": "tchmi:framework#/definitions/Control",
            "symbolExpression": "%ctrl%TcHmiDatagrid_RecipeView%/ctrl%"
          },
          {
            "objectType": "Symbol",
            "symbolExpression": "%ctrl%TcHmiCombobox_RecipeList::SelectedValue%/ctrl%"
          }
        ],
        "asyncWait": true
      }
    ]
  }
]</script>

<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
{
  "topLeft": 5.0,
  "topRight": 5.0,
  "bottomLeft": 5.0,
  "bottomRight": 5.0,
  "topLeftUnit": "px",
  "topRightUnit": "px",
  "bottomLeftUnit": "px",
  "bottomRightUnit": "px"
}
</script>
</div>

<div id="TcHmiButton_ReadValuesFromTarget" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="8" data-tchmi-height-unit="%" data-tchmi-left="41.5" data-tchmi-left-unit="%" data-tchmi-text="Read values from target" data-tchmi-top="35" data-tchmi-top-unit="%" data-tchmi-width="17" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-tooltip="The values in the third column of the datagrid are updated with the current values from the target.">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "TcHmiButton_ReadValuesFromTarget.onPressed",
    "actions": [
      {
        "objectType": "Function",
        "active": true,
        "fn": "UpdateDatagridFromTarget",
        "fnParams": [
          {
            "objectType": "Symbol",
            "valueType": "tchmi:framework#/definitions/Control",
            "symbolExpression": "%ctrl%TcHmiDatagrid_RecipeView%/ctrl%"
          },
          {
            "objectType": "Symbol",
            "symbolExpression": "%ctrl%TcHmiCombobox_RecipeList::SelectedValue%/ctrl%"
          }
        ],
        "asyncWait": true
      }
    ]
  }
]</script>

<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
{
  "topLeft": 5.0,
  "topRight": 5.0,
  "bottomLeft": 5.0,
  "bottomRight": 5.0,
  "topLeftUnit": "px",
  "topRightUnit": "px",
  "bottomLeftUnit": "px",
  "bottomRightUnit": "px"
}
</script>
</div>

<div id="TcHmiTextblock_OnlineValues" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="4" data-tchmi-height-unit="%" data-tchmi-left="79.5" data-tchmi-left-unit="%" data-tchmi-text="Online values:" data-tchmi-top="5" data-tchmi-top-unit="%" data-tchmi-width="17" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-text-font-size="15" data-tchmi-text-font-weight="Bold" data-tchmi-text-vertical-alignment="Center" data-tchmi-text-horizontal-alignment="Center">

</div>

<div id="TcHmiTextblock_Value1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="4" data-tchmi-height-unit="%" data-tchmi-left="79.5" data-tchmi-left-unit="%" data-tchmi-text="%f%'Target: '+ %s%PLC_PML.MAIN.fbHMI_TestCode.nShiftSimTarget%/s%%/f%" data-tchmi-top="10" data-tchmi-top-unit="%" data-tchmi-width="17" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-text-font-size="14" data-tchmi-text-font-weight="Normal" data-tchmi-text-vertical-alignment="Center" data-tchmi-text-horizontal-alignment="Center">

</div>

<div id="TcHmiTextblock_Value2" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="4" data-tchmi-height-unit="%" data-tchmi-left="79.5" data-tchmi-left-unit="%" data-tchmi-text="%f%'Shift Length: '+ %s%PLC_PML.MAIN.fbHMI_TestCode.nShiftSimEnd%/s%%/f%" data-tchmi-top="15" data-tchmi-top-unit="%" data-tchmi-width="17" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-text-font-size="14" data-tchmi-text-font-weight="Normal" data-tchmi-text-vertical-alignment="Center" data-tchmi-text-horizontal-alignment="Center">

</div>

<div id="TcHmiButton_Download" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="8" data-tchmi-height-unit="%" data-tchmi-left="79.5" data-tchmi-left-unit="%" data-tchmi-text="Download recipe" data-tchmi-top="35" data-tchmi-top-unit="%" data-tchmi-width="17" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-tooltip="The selected recipe is download via the client and is available on device, where the client is started.">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "TcHmiButton_Download.onPressed",
    "actions": [
      {
        "objectType": "Function",
        "active": true,
        "fn": "DownloadRecipe",
        "fnParams": [
          {
            "objectType": "Symbol",
            "symbolExpression": "%ctrl%TcHmiCombobox_RecipeList::SelectedValue%/ctrl%"
          }
        ],
        "asyncWait": true
      }
    ]
  }
]</script>

<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
{
  "topLeft": 5.0,
  "topRight": 5.0,
  "bottomLeft": 5.0,
  "bottomRight": 5.0,
  "topLeftUnit": "px",
  "topRightUnit": "px",
  "bottomLeftUnit": "px",
  "bottomRightUnit": "px"
}
</script>
</div>

<div id="TcHmiButton_Upload" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="8" data-tchmi-height-unit="%" data-tchmi-left="3.5" data-tchmi-left-unit="%" data-tchmi-text="Upload recipe" data-tchmi-top="35" data-tchmi-top-unit="%" data-tchmi-width="17" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-tooltip="The upload dialog of the client brower is opened to upload a recipe, which is automatically added to the available recipes.">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "TcHmiButton_Upload.onPressed",
    "actions": [
      {
        "objectType": "Function",
        "active": true,
        "fn": "UploadRecipe",
        "fnParams": [],
        "asyncWait": true
      }
    ]
  }
]</script>

<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
{
  "topLeft": 5.0,
  "topRight": 5.0,
  "bottomLeft": 5.0,
  "bottomRight": 5.0,
  "topLeftUnit": "px",
  "topRightUnit": "px",
  "bottomLeftUnit": "px",
  "bottomRightUnit": "px"
}
</script>
</div>

<div id="TcHmiTextblock_Filter" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="8" data-tchmi-height-unit="%" data-tchmi-left="2" data-tchmi-left-unit="%" data-tchmi-text="Filter:" data-tchmi-top="3.5" data-tchmi-top-unit="%" data-tchmi-width="20" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-text-font-size="15" data-tchmi-text-font-weight="Bold" data-tchmi-text-vertical-alignment="Center" data-tchmi-text-horizontal-alignment="Right">


<script data-tchmi-target-attribute="data-tchmi-content-padding" type="application/json">
{
  "left": 0,
  "right": 10,
  "top": 0,
  "bottom": 0,
  "leftUnit": "px",
  "rightUnit": "%",
  "topUnit": "px",
  "bottomUnit": "px"
}
</script>
</div>

<div id="TcHmiTextbox_Filter" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextbox" data-tchmi-height="8" data-tchmi-height-unit="%" data-tchmi-left="22" data-tchmi-left-unit="%"  data-tchmi-top="3.5" data-tchmi-top-unit="%" data-tchmi-width="35" data-tchmi-width-unit="%" data-tchmi-tooltip="Fill in a recipe name to filter the selection of recipes">
<script data-tchmi-target-attribute="data-tchmi-content-padding" type="application/json">
{
  "top": 3,
  "right": 3,
  "bottom": 3,
  "left": 3
}
</script>


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiTextbox_Filter.onFocusIn",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%Keyboard_Button::ToggleState%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:framework#/definitions/ToggleState",
          "value": "Active"
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>

<div id="TcHmiDatagrid_RecipeView" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiDatagrid" data-tchmi-height="53" data-tchmi-height-unit="%" data-tchmi-left="2" data-tchmi-left-unit="%" data-tchmi-top="45" data-tchmi-top-unit="%" data-tchmi-width="96" data-tchmi-width-unit="%" data-tchmi-show-row-numbers="False" data-tchmi-right-unit="px" data-tchmi-bottom-unit="px">
<script data-tchmi-target-attribute="data-tchmi-src-column" type="application/json">
[
  {
    "name": "memberName",
    "label": "Member name",
    "control": "TextBlock",
    "width": 50,
    "widthUnit": "%",
    "resize": true,
    "sortable": true,
    "minWidth": 200,
    "minWidthUnit": "px",
    "cellBackground": null,
    "textColor": null,
    "editable": false,
    "horizontalAlignment": "Center",
    "verticalAlignment": "Center",
    "format": null
  },
  {
    "name": "value",
    "label": "Saved value",
    "control": "TextBlock",
    "width": 25,
    "widthUnit": "%",
    "resize": true,
    "sortable": false,
    "minWidth": 100,
    "minWidthUnit": "px",
    "cellBackground": null,
    "textColor": null,
    "editable": false,
    "horizontalAlignment": "Center",
    "verticalAlignment": "Center",
    "format": null
  },
  {
    "name": "newValue",
    "label": "New value",
    "control": "TextBox",
    "width": 25,
    "widthUnit": "%",
    "resize": true,
    "sortable": false,
    "minWidth": 100,
    "minWidthUnit": "px",
    "cellBackground": null,
    "textColor": null,
    "editable": true,
    "horizontalAlignment": "Center",
    "verticalAlignment": "Center",
    "format": null
  }
]
</script>

<script data-tchmi-target-attribute="data-tchmi-cell-content-padding" type="application/json">
{
  "left": 3,
  "leftUnit": "px",
  "right": 3,
  "rightUnit": "px",
  "top": 0,
  "topUnit": "px",
  "bottom": 0,
  "bottomUnit": "px"
}
</script>


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%TcHmiRecipeManagement.Config::recipeList%/s%",
    "actions": [
      {
        "objectType": "Function",
        "active": true,
        "fn": "TcHmi.Functions.Beckhoff.CreateBinding",
        "fnParams": [
          {
            "objectType": "Symbol",
            "valueType": "tchmi:framework#/definitions/Control",
            "symbolExpression": "%ctrl%TcHmiDatagrid_RecipeView%/ctrl%"
          },
          {
            "objectType": "StaticValue",
            "valueType": "tchmi:framework#/definitions/ControlPropertyName",
            "value": "SrcData"
          },
          {
            "objectType": "Symbol",
            "symbolExpression": "%f%ConvertRecipeToDataGrid(%ctrl%TcHmiCombobox_RecipeList::SelectedValue%/ctrl%)%/f%"
          }
        ],
        "asyncWait": true
      },
      {
        "objectType": "Function",
        "active": true,
        "fn": "ConvertRecipeToDataGrid",
        "fnParams": [
          {
            "objectType": "StaticValue",
            "valueType": "tchmi:framework#/definitions/RecipeReference",
            "value": "BaseConfig"
          }
        ],
        "asyncWait": true
      }
    ]
  },
  {
    "event": "TcHmiDatagrid_RecipeView.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%Keyboard_Button::ToggleState%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:framework#/definitions/ToggleState",
          "value": "Active"
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>

</div>