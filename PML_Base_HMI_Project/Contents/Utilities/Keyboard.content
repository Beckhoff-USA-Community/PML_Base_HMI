<div id="Keyboard" data-tchmi-type="TcHmi.Controls.System.TcHmiContent" data-tchmi-top="0" data-tchmi-left="0" data-tchmi-width="100" data-tchmi-height="100" data-tchmi-creator-viewport-width="480" data-tchmi-creator-viewport-height="192" data-tchmi-left-unit="%" data-tchmi-top-unit="%" data-tchmi-width-unit="%" data-tchmi-height-unit="%">

<div id="Keyboard_Base" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiKeyboard" data-tchmi-label-font-size="14" data-tchmi-layout-file="KeyboardLayouts/US - compact.keyboard.json" data-tchmi-left="0" data-tchmi-left-unit="%" data-tchmi-scale-mode="ScaleToFit" data-tchmi-width="100" data-tchmi-width-unit="%" data-tchmi-zindex="18" data-tchmi-top-unit="px" data-tchmi-bottom="0" data-tchmi-bottom-unit="%" data-tchmi-height-unit="%" data-tchmi-height="100">
<script data-tchmi-target-attribute="data-tchmi-indirect-input-padding" type="application/json">
{
  "top": 3,
  "right": 3,
  "bottom": 3,
  "left": 3
}
</script>
<script data-tchmi-target-attribute="data-tchmi-keyboard-padding" type="application/json">
{
  "left": 5,
  "right": 5,
  "top": 5,
  "bottom": 5,
  "leftUnit": "px",
  "rightUnit": "px",
  "topUnit": "px",
  "bottomUnit": "px"
}
</script>
<script data-tchmi-target-attribute="data-tchmi-key-padding" type="application/json">
{
  "left": 2,
  "right": 2,
  "top": 2,
  "bottom": 2,
  "leftUnit": "px",
  "rightUnit": "px",
  "topUnit": "px",
  "bottomUnit": "px"
}
</script>
<script data-tchmi-target-attribute="data-tchmi-additional-key-backdrop-padding" type="application/json">
{
  "left": 5,
  "right": 5,
  "top": 5,
  "bottom": 5,
  "leftUnit": "px",
  "rightUnit": "px",
  "topUnit": "px",
  "bottomUnit": "px"
}
</script>


<script data-tchmi-target-attribute="data-tchmi-background-color" type="application/json">
{
  "color": "rgba(125, 125, 125, 0.7843137)"
}
</script>



<script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
{
  "left": 1,
  "right": 1,
  "top": 1,
  "bottom": 1,
  "leftUnit": "px",
  "rightUnit": "px",
  "topUnit": "px",
  "bottomUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
{
  "left": "Solid",
  "right": "Solid",
  "top": "Solid",
  "bottom": "None"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%i%Keyboard_isActive%/i%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%i%Keyboard_isActive%/i%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/Boolean",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "JavaScript",
                "active": true,
                "sourceLines": [
                  "var animation = new TcHmi.Animation('Keyboard_Region','');\nvar buttonAnimation = new TcHmi.Animation('Keyboard_Button','');\n\nvar keyboardHeight = TcHmi.Symbol.readEx('%ctrl%Keyboard_Region::RenderedHeight%/ctrl%');\n\nvar startStr = '-' + String(keyboardHeight) + 'px';\nvar endStr = String(keyboardHeight) + 'px';\n\nanimation.registerEventHandler('animationend', (event) => TcHmi.Symbol.writeEx('%ctrl%Keyboard_Button::IsEnabled%/ctrl%', 'True'));\n\nanimation.direction('normal');\n\nanimation.addKeyframe({ bottom: startStr }, 0)\n    .addKeyframe({ bottom: '0px' }, 1);\n\nanimation.fillMode('both');\nanimation.duration(250);\nanimation.run();\n\n\nbuttonAnimation.direction('normal');\n\nbuttonAnimation.addKeyframe({ bottom: '0px'}, 0)\n    .addKeyframe({ bottom: endStr}, 1);\n\nbuttonAnimation.fillMode('both');\nbuttonAnimation.duration(250);\nbuttonAnimation.run();"
                ],
                "injectContextObject": false,
                "asyncWait": true,
                "waitMode": "Synchronous"
              },
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%Keyboard_Button::Icon%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Path",
                  "value": "Imports/Images/Keyboard-icon_DnArrow.png"
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "JavaScript",
                "active": true,
                "sourceLines": [
                  "var animation = new TcHmi.Animation('Keyboard_Region','');\nvar buttonAnimation = new TcHmi.Animation('Keyboard_Button','');\n\nvar keyboardHeight = TcHmi.Symbol.readEx('%ctrl%Keyboard_Region::RenderedHeight%/ctrl%');\n\nvar startStr = '-' + String(keyboardHeight) + 'px';\nvar endStr = String(keyboardHeight) + 'px';\n\nanimation.registerEventHandler('animationend', (event) => TcHmi.Symbol.writeEx('%ctrl%Keyboard_Button::IsEnabled%/ctrl%', 'True'));\n\nanimation.direction('reverse');\n\nanimation.addKeyframe({ bottom: startStr }, 0)\n    .addKeyframe({ bottom: '0px' }, 1);\n\nanimation.fillMode('both');\nanimation.duration(250);\nanimation.run();\n\n\nbuttonAnimation.direction('reverse');\n\nbuttonAnimation.addKeyframe({ bottom: '0px'}, 0)\n    .addKeyframe({ bottom: endStr}, 1);\n\nbuttonAnimation.fillMode('both');\nbuttonAnimation.duration(250);\nbuttonAnimation.run();"
                ],
                "injectContextObject": false,
                "asyncWait": true,
                "waitMode": "Synchronous"
              },
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%Keyboard_Button::Icon%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Path",
                  "value": "Imports/Images/Keyboard-icon_UpArrow.png"
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>

<script data-tchmi-target-attribute="data-tchmi-key-background-color" type="application/json">
{
  "color": "rgba(28, 48, 68, 1)"
}
</script>
</div>


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%i%Keyboard_isActive%/i%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%i%Keyboard_isActive%/i%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/Boolean",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%Keyboard::Visibility%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Visibility",
                  "value": "Visible"
                },
                "asyncWait": true
              },
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%Keyboard_Button::IsEnabled%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/Boolean",
                  "value": false
                },
                "asyncWait": true
              },
              {
                "objectType": "JavaScript",
                "active": true,
                "sourceLines": [
                  "var animation = new TcHmi.Animation('Keyboard_Region','');\nvar keyboardHeight = TcHmi.Symbol.readEx('%ctrl%Keyboard_Region::RenderedHeight%/ctrl%');\n\nvar startStr = '-' + String(keyboardHeight) + 'px';\n\nanimation.registerEventHandler('animationend', (event) => TcHmi.Symbol.writeEx('%ctrl%Keyboard_Button::IsEnabled%/ctrl%', 'True'));\n\nanimation.direction('normal');\n\nanimation.addKeyframe({ bottom: startStr, left: '0px' }, 0)\n    .addKeyframe({ bottom: '0px', left: '0px' }, 1);\n\nanimation.fillMode('both');\nanimation.duration(250);\nanimation.run();"
                ],
                "injectContextObject": false,
                "asyncWait": true,
                "waitMode": "Synchronous"
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%Keyboard_Button::IsEnabled%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/Boolean",
                  "value": false
                },
                "asyncWait": true
              },
              {
                "objectType": "JavaScript",
                "active": true,
                "sourceLines": [
                  "var animation = new TcHmi.Animation('Keyboard_Region','');\nvar keyboardHeight = TcHmi.Symbol.readEx('%ctrl%Keyboard_Region::RenderedHeight%/ctrl%');\n\nvar startStr = '-' + String(keyboardHeight) + 'px';\n\nanimation.registerEventHandler('animationend', (event) => hideRegion_enableButton());\n\nfunction hideRegion_enableButton() {\n\tTcHmi.Symbol.writeEx('%ctrl%Keyboard::Visibility%/ctrl%', 'Collapsed')\n\tTcHmi.Symbol.writeEx('%ctrl%Keyboard_Button::IsEnabled%/ctrl%', 'True')\n\t}\n\nanimation.direction('reverse');\n\nanimation.addKeyframe({ bottom: startStr, left: '0px' }, 0)\n    .addKeyframe({ bottom: '0px', left: '0px' }, 1);\n\nanimation.fillMode('both');\nanimation.duration(250);\nanimation.run();"
                ],
                "injectContextObject": false,
                "asyncWait": true,
                "waitMode": "Synchronous"
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>

</div>