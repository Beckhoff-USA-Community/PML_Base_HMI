<div id="SettingsMenu_PopoutContent" data-tchmi-type="TcHmi.Controls.System.TcHmiContent" data-tchmi-top="0" data-tchmi-left="0" data-tchmi-width="100" data-tchmi-height="100" data-tchmi-creator-viewport-width="320" data-tchmi-creator-viewport-height="360" data-tchmi-width-unit="%" data-tchmi-height-unit="%">

<div data-tchmi-grid-row-index="0" data-tchmi-grid-column-index="0" id="SettingsMenu_PopoutContainer" data-tchmi-type="TcHmi.Controls.System.TcHmiContainer" data-tchmi-height="100" data-tchmi-height-unit="%" data-tchmi-width="100" data-tchmi-width-unit="%" data-tchmi-zindex="5" data-tchmi-top-unit="px" data-tchmi-bottom-unit="%" data-tchmi-bottom="0" data-tchmi-right-unit="%" data-tchmi-left-unit="px" data-tchmi-right="0" data-tchmi-creator-visibility="Visible">



<script data-tchmi-target-attribute="data-tchmi-background-color" type="application/json">
{
  "color": "rgba(38, 58, 78, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
{
  "left": 1,
  "right": 1,
  "top": 0,
  "bottom": 1,
  "leftUnit": "px",
  "rightUnit": "px",
  "topUnit": "px",
  "bottomUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
{
  "left": "Solid",
  "right": "Solid",
  "top": "None",
  "bottom": "Solid"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
{
  "topLeft": 5.0,
  "topRight": 0.0,
  "bottomLeft": 5.0,
  "bottomRight": 5.0,
  "topLeftUnit": "px",
  "topRightUnit": "px",
  "bottomLeftUnit": "px",
  "bottomRightUnit": "px"
}
</script>

<div id="SettingsMenu_AlarmConfiguration_RaisedOnly_Checkbox" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiCheckbox" data-tchmi-height="15" data-tchmi-height-unit="%" data-tchmi-left="5" data-tchmi-left-unit="%" data-tchmi-text="Raised Only" data-tchmi-top="25" data-tchmi-top-unit="%" data-tchmi-width="44" data-tchmi-width-unit="%" data-tchmi-creator-visibility="Visible" data-tchmi-right-unit="px" data-tchmi-bottom-unit="px" data-tchmi-text-font-size-unit="px" data-tchmi-text-font-size="%f%%ctrl%SettingsMenu_AlarmConfiguration_RaisedOnly_Checkbox::RenderedHeight%/ctrl%* 0.35%/f%" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text-position="Right">



<script data-tchmi-target-attribute="data-tchmi-text-background-color" type="application/json">
{
  "color": "rgba(224, 224, 224, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
{
  "topLeft": 5.0,
  "topRight": 5.0,
  "bottomLeft": 5.0,
  "bottomRight": 5.0,
  "topLeftUnit": "px",
  "topRightUnit": "px",
  "bottomLeftUnit": "px",
  "bottomRightUnit": "px"
}
</script>



<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "SettingsMenu_AlarmConfiguration_RaisedOnly_Checkbox.onToggleStateChanged",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%i%AlarmConfiguration_CheckboxChanged%/i%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": true
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="AlarmBannerConfiguration_Label" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="15" data-tchmi-height-unit="%" data-tchmi-left="5" data-tchmi-left-unit="%" data-tchmi-top="5" data-tchmi-top-unit="%" data-tchmi-width="90" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text-vertical-alignment="Center" data-tchmi-right-unit="px" data-tchmi-bottom-unit="px" data-tchmi-text="Alarm Banner Configuration" data-tchmi-text-font-size-unit="px">
<script data-tchmi-target-attribute="data-tchmi-background-color" type="application/json">
{
  "color": "rgba(224, 224, 224, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
{
  "topLeft": 5.0,
  "topRight": 5.0,
  "bottomLeft": 5.0,
  "bottomRight": 5.0,
  "topLeftUnit": "px",
  "topRightUnit": "px",
  "bottomLeftUnit": "px",
  "bottomRightUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>
</div>
<div id="SettingsMenu_AlarmConfiguration_IgnorePML_Checkbox" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiCheckbox" data-tchmi-height="15" data-tchmi-height-unit="%" data-tchmi-left="51" data-tchmi-left-unit="%" data-tchmi-text="Ignore PackML" data-tchmi-top="25" data-tchmi-top-unit="%" data-tchmi-width="45" data-tchmi-width-unit="%" data-tchmi-creator-visibility="Visible" data-tchmi-right-unit="px" data-tchmi-bottom-unit="px" data-tchmi-text-font-size-unit="px" data-tchmi-text-font-size="%f%%ctrl%SettingsMenu_AlarmConfiguration_RaisedOnly_Checkbox::RenderedHeight%/ctrl%* 0.35%/f%" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text-position="Right">
<script data-tchmi-target-attribute="data-tchmi-text-background-color" type="application/json">
{
  "color": "rgba(224, 224, 224, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
{
  "topLeft": 5.0,
  "topRight": 5.0,
  "bottomLeft": 5.0,
  "bottomRight": 5.0,
  "topLeftUnit": "px",
  "topRightUnit": "px",
  "bottomLeftUnit": "px",
  "bottomRightUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "SettingsMenu_AlarmConfiguration_IgnorePML_Checkbox.onToggleStateChanged",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%i%AlarmConfiguration_CheckboxChanged%/i%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": true
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%i%AlarmConfiguration_CheckboxChanged%/i%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/Boolean",
                  "symbolExpression": "%i%AlarmConfiguration_CheckboxChanged%/i%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/Boolean",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "Condition",
                "active": true,
                "parts": [
                  {
                    "if": [
                      {
                        "compare1": {
                          "objectType": "Symbol",
                          "valueType": "tchmi:framework#/definitions/ToggleState",
                          "symbolExpression": "%ctrl%SettingsMenu_AlarmConfiguration_RaisedOnly_Checkbox::ToggleState%/ctrl%"
                        },
                        "compare2": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:framework#/definitions/ToggleState",
                          "value": "Active"
                        },
                        "compareOperator": "==",
                        "logic": null
                      }
                    ],
                    "then": [
                      {
                        "objectType": "WriteToSymbol",
                        "active": true,
                        "symbolExpression": "%ctrl%Main_AlarmBanner::Filter%/ctrl%",
                        "value": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:server#/definitions/eventFilter",
                          "value": [
                            {
                              "path": "domain",
                              "comparator": "==",
                              "value": "TcHmiEventLogger"
                            },
                            {
                              "logic": "AND"
                            },
                            {
                              "path": "alarmState",
                              "comparator": "==",
                              "value": 0
                            }
                          ]
                        },
                        "asyncWait": true
                      }
                    ]
                  },
                  {
                    "else": [
                      {
                        "objectType": "WriteToSymbol",
                        "active": true,
                        "symbolExpression": "%ctrl%Main_AlarmBanner::Filter%/ctrl%",
                        "value": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:server#/definitions/eventFilter",
                          "value": [
                            {
                              "path": "domain",
                              "comparator": "==",
                              "value": "TcHmiEventLogger"
                            }
                          ]
                        },
                        "asyncWait": true
                      }
                    ]
                  }
                ],
                "asyncWait": true
              },
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%i%AlarmConfiguration_CheckboxChanged%/i%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/Boolean",
                  "value": false
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": []
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
</div>