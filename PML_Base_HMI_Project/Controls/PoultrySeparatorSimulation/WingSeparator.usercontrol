<div id="TipWingSeparator" data-tchmi-type="TcHmi.Controls.System.TcHmiUserControl" data-tchmi-top="0" data-tchmi-left="0" data-tchmi-width="100" data-tchmi-height="100" data-tchmi-width-unit="%" data-tchmi-height-unit="%" data-tchmi-creator-viewport-width="500" data-tchmi-creator-viewport-height="500" data-tchmi-left-unit="px" data-tchmi-top-unit="px" data-tchmi-right-unit="px" data-tchmi-bottom-unit="px">

<div id="LeftClamp" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiRadialGauge" data-tchmi-base-animation-time="50" data-tchmi-gauge-alignment="Center" data-tchmi-height="50" data-tchmi-height-unit="%" data-tchmi-label-range="20" data-tchmi-left="5" data-tchmi-left-unit="%" data-tchmi-show-labels="false" data-tchmi-show-ticks="false" data-tchmi-show-value-text="false" data-tchmi-start-from-zero="True" data-tchmi-top="25" data-tchmi-top-unit="%" data-tchmi-width="50" data-tchmi-width-unit="%" data-tchmi-min-value="0" data-tchmi-max-value="1" data-tchmi-step="0" data-tchmi-right-unit="px" data-tchmi-bottom-unit="px" data-tchmi-start-position="180" data-tchmi-end-position="35" data-tchmi-background-image-width-unit="px" data-tchmi-background-image-height-unit="px" data-tchmi-unit-font-size-unit="px" data-tchmi-value-font-size-unit="px" data-tchmi-label-font-size-unit="px" data-tchmi-value="1" data-tchmi-opacity="1" data-tchmi-grid-column-index="0" data-tchmi-grid-row-index="0" data-tchmi-max-width-unit="px" data-tchmi-max-height-unit="px" data-tchmi-min-width-unit="px" data-tchmi-min-height-unit="px">

<script data-tchmi-target-attribute="data-tchmi-value-format" type="application/json">
{
  "objectType": "Function",
  "fn": "GaugeValueFormatter",
  "fnParams": []
}
</script>
<script data-tchmi-target-attribute="data-tchmi-tick-definition" type="application/json">
{
  "mainTickRange": 20,
  "subTickRange": 5
}
</script>


<script data-tchmi-target-attribute="data-tchmi-gauge-background-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 0)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-progress-background-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 0)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-progress-foreground-color" type="application/json">
{
  "color": "rgba(0, 255, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%pp%LeftClampExtend%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%pp%LeftClampExtend%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%LeftClamp::Value%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/Number",
                  "value": 0.0
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%LeftClamp::Value%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/Number",
                  "value": 1.0
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>

<div id="RightClamp" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiRadialGauge" data-tchmi-base-animation-time="50" data-tchmi-gauge-alignment="Center" data-tchmi-height="50" data-tchmi-height-unit="%" data-tchmi-label-range="20" data-tchmi-left="5" data-tchmi-left-unit="%" data-tchmi-show-labels="false" data-tchmi-show-ticks="false" data-tchmi-show-value-text="false" data-tchmi-start-from-zero="True" data-tchmi-top="45" data-tchmi-top-unit="%" data-tchmi-width="50" data-tchmi-width-unit="%" data-tchmi-min-value="0" data-tchmi-max-value="1" data-tchmi-step="0" data-tchmi-right-unit="px" data-tchmi-bottom-unit="px" data-tchmi-start-position="180" data-tchmi-end-position="35" data-tchmi-background-image-width-unit="px" data-tchmi-background-image-height-unit="px" data-tchmi-unit-font-size-unit="px" data-tchmi-value-font-size-unit="px" data-tchmi-label-font-size-unit="px" data-tchmi-value="1">

<script data-tchmi-target-attribute="data-tchmi-value-format" type="application/json">
{
  "objectType": "Function",
  "fn": "GaugeValueFormatter",
  "fnParams": []
}
</script>
<script data-tchmi-target-attribute="data-tchmi-tick-definition" type="application/json">
{
  "mainTickRange": 20,
  "subTickRange": 5
}
</script>


<script data-tchmi-target-attribute="data-tchmi-gauge-background-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 0)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-progress-background-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 0)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-progress-foreground-color" type="application/json">
{
  "color": "rgba(0, 255, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%pp%RightClampExtend%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%pp%RightClampExtend%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%RightClamp::Value%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/Number",
                  "value": 0.0
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%RightClamp::Value%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/Number",
                  "value": 1.0
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>

<div id="RightCutter" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiLinearGauge" data-tchmi-base-animation-time="50" data-tchmi-height="60" data-tchmi-height-unit="%" data-tchmi-label-range="20" data-tchmi-left="10" data-tchmi-left-unit="%" data-tchmi-show-labels="false" data-tchmi-show-ticks="false" data-tchmi-show-value-text="false" data-tchmi-start-from-zero="True" data-tchmi-top="40" data-tchmi-top-unit="%" data-tchmi-width="100" data-tchmi-width-unit="%" data-tchmi-value="1" data-tchmi-min-value="0" data-tchmi-max-value="1" data-tchmi-step="0" data-tchmi-value-space-unit="px" data-tchmi-value-font-size-unit="px" data-tchmi-right-unit="px" data-tchmi-bottom-unit="px" data-tchmi-orientation="Vertical" data-tchmi-background-image-width-unit="px" data-tchmi-background-image-height-unit="px" data-tchmi-opacity="1" data-tchmi-grid-column-index="0" data-tchmi-grid-row-index="0" data-tchmi-max-width-unit="px" data-tchmi-max-height-unit="px" data-tchmi-min-width-unit="px" data-tchmi-min-height-unit="px">

<script data-tchmi-target-attribute="data-tchmi-value-format" type="application/json">
{
  "objectType": "Function",
  "fn": "GaugeValueFormatter",
  "fnParams": []
}
</script>
<script data-tchmi-target-attribute="data-tchmi-tick-definition" type="application/json">
{
  "mainTickRange": 20,
  "subTickRange": 5
}
</script>


<script data-tchmi-target-attribute="data-tchmi-background-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 0)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-progress-background-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 0)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-progress-foreground-color" type="application/json">
{
  "color": "rgba(0, 255, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%pp%RightCutterExtend%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%pp%RightCutterExtend%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%RightCutter::Value%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/Number",
                  "value": 0.0
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%RightCutter::Value%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/Number",
                  "value": 1.0
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>

<div id="LeftCutter" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiLinearGauge" data-tchmi-base-animation-time="50" data-tchmi-height="60" data-tchmi-height-unit="%" data-tchmi-label-range="20" data-tchmi-left="10" data-tchmi-left-unit="%" data-tchmi-show-labels="false" data-tchmi-show-ticks="false" data-tchmi-show-value-text="false" data-tchmi-start-from-zero="true" data-tchmi-top="0" data-tchmi-top-unit="%" data-tchmi-width="100" data-tchmi-width-unit="%" data-tchmi-value="-1" data-tchmi-min-value="-1" data-tchmi-max-value="0" data-tchmi-step="0" data-tchmi-value-space-unit="px" data-tchmi-value-font-size-unit="px" data-tchmi-right-unit="px" data-tchmi-bottom-unit="px" data-tchmi-orientation="Vertical" data-tchmi-background-image-width-unit="px" data-tchmi-background-image-height-unit="px" data-tchmi-opacity="1" data-tchmi-grid-column-index="0" data-tchmi-grid-row-index="0" data-tchmi-max-width-unit="px" data-tchmi-max-height-unit="px" data-tchmi-min-width-unit="px" data-tchmi-min-height-unit="px">

<script data-tchmi-target-attribute="data-tchmi-value-format" type="application/json">
{
  "objectType": "Function",
  "fn": "GaugeValueFormatter",
  "fnParams": []
}
</script>
<script data-tchmi-target-attribute="data-tchmi-tick-definition" type="application/json">
{
  "mainTickRange": 20,
  "subTickRange": 5
}
</script>


<script data-tchmi-target-attribute="data-tchmi-background-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 0)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-progress-background-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 0)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-progress-foreground-color" type="application/json">
{
  "color": "rgba(0, 255, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%pp%LeftCutterExtend%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%pp%LeftCutterExtend%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%LeftCutter::Value%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/Number",
                  "value": 0.0
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%LeftCutter::Value%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/Number",
                  "value": -1.0
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>

</div>