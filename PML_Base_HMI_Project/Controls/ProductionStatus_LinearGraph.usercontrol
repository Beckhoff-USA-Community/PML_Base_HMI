<div id="ProductionStatus_LinearGraph" data-tchmi-type="TcHmi.Controls.System.TcHmiUserControl" data-tchmi-top="0" data-tchmi-left="0" data-tchmi-width="100" data-tchmi-height="100" data-tchmi-width-unit="%" data-tchmi-height-unit="%" data-tchmi-creator-viewport-width="480" data-tchmi-creator-viewport-height="160">

<div id="GraphBase" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiLinearGauge" data-tchmi-base-animation-time="1000" data-tchmi-height="100" data-tchmi-height-unit="%" data-tchmi-label-range="1000" data-tchmi-left="0" data-tchmi-left-unit="%" data-tchmi-show-labels="True" data-tchmi-show-ticks="True" data-tchmi-show-value-text="False" data-tchmi-start-from-zero="True" data-tchmi-top="0" data-tchmi-top-unit="%" data-tchmi-width="100" data-tchmi-width-unit="%" data-tchmi-label-position="Right" data-tchmi-label-font-size="10" data-tchmi-value="50">

<script data-tchmi-target-attribute="data-tchmi-value-format" type="application/json">
{
  "objectType": "Function",
  "fn": "GaugeValueFormatter",
  "fnParams": []
}
</script>
<script data-tchmi-target-attribute="data-tchmi-tick-definition" type="application/json">
{
  "mainTickRange": 20,
  "subTickRange": 5
}
</script>


<script data-tchmi-target-attribute="data-tchmi-background-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 0)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 0)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%pp%ShiftTarget%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%pp%CurrentActual%/pp%"
                },
                "compare2": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%pp%ShiftTarget%/pp%"
                },
                "compareOperator": "<",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%GraphBase::MaxValue%/ctrl%",
                "value": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%pp%ShiftTarget%/pp%"
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%GraphBase::MaxValue%/ctrl%",
                "value": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%pp%CurrentActual%/pp%"
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%GraphBase::TickDefinition%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.GaugeTickDefinition",
          "value": {
            "mainTickRange": 200.0,
            "subTickRange": 40.0
          }
        },
        "asyncWait": true
      }
    ]
  },
  {
    "event": "%pp%CurrentTarget%/pp%",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%GraphBase::Range%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.GaugeRangeDefinitionList",
          "value": [
            {
              "color": {
                "color": "rgba(50, 175, 50, 1)"
              },
              "start": "%f%%pp%CurrentTarget%/pp%-(%pp%CurrentTarget%/pp%*%pp%MarginPercent%/pp%*.01)%/f%",
              "end": "%ctrl%GraphBase::MaxValue%/ctrl%"
            },
            {
              "color": {
                "color": "rgba(200, 200, 0, 1)"
              },
              "start": "%f%%pp%CurrentTarget%/pp%-(%pp%CurrentTarget%/pp%*%pp%MarginPercent%/pp%*.04)%/f%",
              "end": "%f%%pp%CurrentTarget%/pp%-(%pp%CurrentTarget%/pp%*%pp%MarginPercent%/pp%*.01)%/f%"
            },
            {
              "color": {
                "color": "rgba(175, 25, 25, 1)"
              },
              "start": "%f%0%/f%",
              "end": "%f%%pp%CurrentTarget%/pp%-(%pp%CurrentTarget%/pp%*%pp%MarginPercent%/pp%*.04)%/f%"
            }
          ]
        },
        "asyncWait": true
      }
    ]
  },
  {
    "event": "%pp%CurrentActual%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%pp%CurrentActual%/pp%"
                },
                "compare2": {
                  "objectType": "FunctionExpression",
                  "functionExpression": "%pp%CurrentTarget%/pp%-(%pp%CurrentTarget%/pp%*%pp%MarginPercent%/pp%*.01)"
                },
                "compareOperator": ">",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%GraphBase::ProgressForegroundColor%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(50, 175, 50, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "Condition",
                "active": true,
                "parts": [
                  {
                    "if": [
                      {
                        "compare1": {
                          "objectType": "Symbol",
                          "valueType": "tchmi:general#/definitions/String",
                          "symbolExpression": "%pp%CurrentActual%/pp%"
                        },
                        "compare2": {
                          "objectType": "FunctionExpression",
                          "functionExpression": "%pp%CurrentTarget%/pp%-(%pp%CurrentTarget%/pp%*%pp%MarginPercent%/pp%*.04)"
                        },
                        "compareOperator": "<=",
                        "logic": null
                      }
                    ],
                    "then": [
                      {
                        "objectType": "WriteToSymbol",
                        "active": true,
                        "symbolExpression": "%ctrl%GraphBase::ProgressForegroundColor%/ctrl%",
                        "value": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:framework#/definitions/Color",
                          "value": {
                            "color": "rgba(175, 25, 25, 1)"
                          }
                        },
                        "asyncWait": true
                      }
                    ]
                  },
                  {
                    "else": [
                      {
                        "objectType": "WriteToSymbol",
                        "active": true,
                        "symbolExpression": "%ctrl%GraphBase::ProgressForegroundColor%/ctrl%",
                        "value": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:framework#/definitions/Color",
                          "value": {
                            "color": "rgba(200, 200, 0, 1)"
                          }
                        },
                        "asyncWait": true
                      }
                    ]
                  }
                ],
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%GraphBase::Value%/ctrl%",
        "value": {
          "objectType": "Symbol",
          "valueType": "tchmi:general#/definitions/String",
          "symbolExpression": "%pp%CurrentActual%/pp%"
        },
        "asyncWait": true
      }
    ]
  }
]
</script>





<script data-tchmi-target-attribute="data-tchmi-padding" type="application/json">
{
  "left": 0,
  "right": 0,
  "top": 0,
  "bottom": 0,
  "leftUnit": "px",
  "rightUnit": "px",
  "topUnit": "px",
  "bottomUnit": "px"
}
</script>
</div>

<div id="CurrentActual_Display" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="20" data-tchmi-height-unit="%" data-tchmi-left="29" data-tchmi-left-unit="%" data-tchmi-word-wrap="True" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text-vertical-alignment="Center" data-tchmi-width-unit="%" data-tchmi-text="%f%&quot;Current: &quot; + %pp%CurrentActual%/pp%%/f%" data-tchmi-bottom="2" data-tchmi-bottom-unit="%" data-tchmi-top-unit="px" data-tchmi-right-unit="px" data-tchmi-width="15" data-tchmi-text-font-size="%f%%ctrl%CurrentActual_Display::RenderedHeight%/ctrl%*.6%/f%">


<script data-tchmi-target-attribute="data-tchmi-background-color" type="application/json">
{
  "color": "rgba(224, 224, 224, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
{
  "topLeft": 5.0,
  "topRight": 5.0,
  "bottomLeft": 5.0,
  "bottomRight": 5.0,
  "topLeftUnit": "px",
  "topRightUnit": "px",
  "bottomLeftUnit": "px",
  "bottomRightUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
{
  "left": 1,
  "right": 1,
  "top": 1,
  "bottom": 1,
  "leftUnit": "px",
  "rightUnit": "px",
  "topUnit": "px",
  "bottomUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
{
  "left": "Solid",
  "right": "Solid",
  "top": "Solid",
  "bottom": "Solid"
}
</script>
</div>

<div id="CurrentTarget_Display" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="20" data-tchmi-height-unit="%" data-tchmi-left="44" data-tchmi-left-unit="%" data-tchmi-word-wrap="True" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text-vertical-alignment="Center" data-tchmi-width-unit="%" data-tchmi-text="%f%&quot;Target: &quot; + %pp%CurrentTarget%/pp%%/f%" data-tchmi-bottom="2" data-tchmi-bottom-unit="%" data-tchmi-top-unit="px" data-tchmi-right-unit="px" data-tchmi-width="15" data-tchmi-text-font-size="%f%%ctrl%CurrentTarget_Display::RenderedHeight%/ctrl%*.6%/f%">


<script data-tchmi-target-attribute="data-tchmi-background-color" type="application/json">
{
  "color": "rgba(224, 224, 224, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
{
  "topLeft": 5.0,
  "topRight": 5.0,
  "bottomLeft": 5.0,
  "bottomRight": 5.0,
  "topLeftUnit": "px",
  "topRightUnit": "px",
  "bottomLeftUnit": "px",
  "bottomRightUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
{
  "left": 1,
  "right": 1,
  "top": 1,
  "bottom": 1,
  "leftUnit": "px",
  "rightUnit": "px",
  "topUnit": "px",
  "bottomUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
{
  "left": "Solid",
  "right": "Solid",
  "top": "Solid",
  "bottom": "Solid"
}
</script>
</div>

<div id="CurrentDelta_Display" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="20" data-tchmi-height-unit="%" data-tchmi-left="59" data-tchmi-left-unit="%" data-tchmi-word-wrap="True" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text-vertical-alignment="Center" data-tchmi-width-unit="%" data-tchmi-text="%f%&quot;Delta: &quot; + (%pp%CurrentActual%/pp%-%pp%CurrentTarget%/pp%)%/f%" data-tchmi-bottom="2" data-tchmi-bottom-unit="%" data-tchmi-top-unit="px" data-tchmi-right-unit="px" data-tchmi-width="15" data-tchmi-text-font-size="%f%%ctrl%CurrentDelta_Display::RenderedHeight%/ctrl%*.6%/f%">


<script data-tchmi-target-attribute="data-tchmi-background-color" type="application/json">
{
  "color": "rgba(224, 224, 224, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
{
  "topLeft": 5.0,
  "topRight": 5.0,
  "bottomLeft": 5.0,
  "bottomRight": 5.0,
  "topLeftUnit": "px",
  "topRightUnit": "px",
  "bottomLeftUnit": "px",
  "bottomRightUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
{
  "left": 1,
  "right": 1,
  "top": 1,
  "bottom": 1,
  "leftUnit": "px",
  "rightUnit": "px",
  "topUnit": "px",
  "bottomUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
{
  "left": "Solid",
  "right": "Solid",
  "top": "Solid",
  "bottom": "Solid"
}
</script>
</div>

</div>